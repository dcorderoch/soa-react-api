{
  "swagger": "2.0",
  "info": {
    "description": "This is a sample server.",
    "version": "1.0.0",
    "title": "Swagger Spaces",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "dcorderoch@ieee.org"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:5000",
  "basePath": "/",
  "tags": [
    {
      "name": "spaces",
      "description": "Everything about your spaces",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    }
  ],
  "paths": {
    "/spaces": {
      "get": {
        "tags": [
          "spaces"
        ],
        "summary": "GetAllSpaces",
        "description": "Returns a single spaces",
        "operationId": "getSpaceById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Space"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          }
        }
      },
      "post": {
        "tags": [
          "spaces"
        ],
        "summary": "Add a new space to the store",
        "description": "",
        "operationId": "addSpace",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Space object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Space"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/spaces/{spaceId}": {
      "get": {
        "tags": [
          "spaces"
        ],
        "summary": "Find spaces by ID",
        "description": "Returns a single spaces",
        "operationId": "getSpaceById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "ID of Space to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Space"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Space not found"
          },
          "415": {
            "description": "Unsupported Media Type"
          }
        }
      },
      "put": {
        "tags": [
          "spaces"
        ],
        "summary": "Updates a space in the lot with form data",
        "description": "",
        "operationId": "updateSpaceWithForm",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "ID of Space that needs to be updated",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "Updated name of the space",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "Updated status of the space",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": [
          "spaces"
        ],
        "summary": "Deletes a space",
        "description": "",
        "operationId": "deletePet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "spaceId",
            "in": "path",
            "description": "space id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "space not found"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify spaces in your account",
        "read:pets": "read your space"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Category"
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "Space": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "data": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "state": {
          "type": "string",
        }
      },
      "xml": {
        "name": "Pet"
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}
